/**
 * This example executes only one task, and re-executes from the checkpoint when it fails. It is
 * triggered by the TaskScheduler's timer.
 *
 * @author Dongha Kim, Hokeun Kim
 */
target C {
  timeout: 9900 msec,
  logging: LOG
}

import Coordinator, TaskScheduler from "lib/FaultTolerantTaskTemplate.lf"
import Task1 from "TaskExample.lf"

main reactor {
  task = new Task1<int, int, int>(
      task_num=1,
      dead_line=3000,
      num_of_segs=3,
      wcet_f = {300, 300, 300},
      wcet_s = {250, 250, 250})
  retry = new Coordinator()
  scheduler = new TaskScheduler<int>(period = 5000 msec, in=0)

  scheduler.trigger -> task.instantiate
  scheduler.task_input -> task.task_input
  task.task_info_update -> retry.task_info_update
  task.instance_start_time -> retry.instance_start_time_update
  task.failed_seg -> retry.failed_seg
  retry.out -> task.retry after 0
}
