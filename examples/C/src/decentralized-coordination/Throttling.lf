target C {
  coordination: decentralized
}

reactor Source {
  output out: int
  state count: int = 0
  input trigger: bool

  reaction(startup, trigger) -> out {=
    lf_set(out, self->count++);
  =}
}

reactor Sink {
  input in: int
  output next: bool

  reaction(in) -> next {=
    tag_t now = lf_tag();
    lf_print("**** Received %d at tag " PRINTF_TAG " with lag " PRINTF_TIME,
        in->value, now.time - lf_time_start(), now.microstep,
        lf_time_physical() - now.time);
    lf_sleep(MSEC(100));
    lf_set(next, true);
  =}
}

federated reactor {
  s = new Source()
  d = new Sink()
  s.out -> d.in
  d.next -> s.trigger after 0
}
