/**
 * A simple federated example that, except at the start, works properly with the default STA
 * and STAA values, which are zero. See the README.md file for more details.
 * @author Edward A. Lee
 */
target C {
  coordination: decentralized,
}

import Count from "../lib/Count.lf"

reactor PrintLag {
  input in: int

  reaction(in) {=
    interval_t lag = lf_time_physical() - lf_time_logical();
    lf_print("**** Reaction to network input %d lag is " PRINTF_TIME "us at logical time " PRINTF_TIME "us, microstep %d.",
        in->value, lag/1000, lf_time_logical_elapsed()/1000, lf_tag().microstep);
  =}
}

federated reactor {
  c = new Count(offset = 0, period = 3 s)
  p = new PrintLag()
  c.out -> p.in
}
